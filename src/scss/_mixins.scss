// -- font-face --

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: ""
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    // font-display: auto;
    src: $src;
  }
}

// -- aspect ratio --

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin yCenter {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin xCenter {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin trs {
  transition: 0.3s ease-in-out;
}

@mixin hide {
  visibility: hidden;
  opacity: 0;
  z-index: -1;
  position: absolute;
}

@mixin show {
  visibility: visible;
  opacity: 1;
  position: relative;
  z-index: auto;
}

@mixin spread {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  position: absolute;
  z-index: 1;
}

@mixin bg {
  background-repeat: no-repeat;
  background-size: 100% 100%;
  background-position: center;
}

@function rem($pixels, $context: $mainFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $pixels / $context * 1rem;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin pseudo($el: after) {
  &:#{$el} {
    content: "";
    display: block;
    position: absolute;
    @content;
  }
}

@mixin lost {
  &:nth-last-child(n + 2) {
    @content;
  }
}

// -- media --

@mixin media-max($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

@mixin media-min($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

// hide text

@mixin hideText {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

// not-btn

@mixin not-btn {
  cursor: pointer;
  background-color: rgba(#fff, 0);
  border: none;
  padding: 0;
}
